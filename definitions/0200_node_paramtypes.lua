---@meta

---
---Node paramtypes
------------------
---

---The functions of `param1` and `param2` are determined by certain fields in the
---node definition.
---
---@alias mt.NodeParam integer

---The function of `param1` is determined by `paramtype` in node definition.
---`param1` is reserved for the engine when `paramtype != "none"`.
---
---@alias mt.ParamType
---* `paramtype = "light"`
---    * The value stores light with and without sun in its lower and upper 4 bits
---      respectively.
---    * Required by a light source node to enable spreading its light.
---    * Required by the following drawtypes as they determine their visual
---      brightness from their internal light value:
---        * torchlike
---        * signlike
---        * firelike
---        * fencelike
---        * raillike
---        * nodebox
---        * mesh
---        * plantlike
---        * plantlike_rooted
---|"light"
---* `paramtype = "none"`
---    * `param1` will not be used by the engine and can be used to store
---      an arbitrary value
---|"none"
---


---The function of `param2` is determined by `paramtype2` in node definition.
---`param2` is reserved for the engine when `paramtype2 != "none"`.
---
---@alias mt.ParamType2
---* `paramtype2 = "flowingliquid"`
---    * Used by `drawtype = "flowingliquid"` and `liquidtype = "flowing"`
---    * The liquid level and a flag of the liquid are stored in `param2`
---    * Bits 0-2: Liquid level (0-7). The higher, the more liquid is in this node;
---      see `core.get_node_level`, `core.set_node_level` and `core.add_node_level`
---      to access/manipulate the content of this field
---    * Bit 3: If set, liquid is flowing downwards (no graphical effect)
---|"flowingliquid"
---* `paramtype2 = "wallmounted"`
---    * Supported drawtypes: "torchlike", "signlike", "plantlike",
---      "plantlike_rooted", "normal", "nodebox", "mesh"
---    * The rotation of the node is stored in `param2`
---    * Node is 'mounted'/facing towards one of 6 directions
---    * You can make this value by using `core.dir_to_wallmounted()`
---    * Values range 0 - 7
---    * The value denotes at which direction the node is "mounted":
---      0 = y+,   1 = y-,   2 = x+,   3 = x-,   4 = z+,   5 = z-
---      6 = y+, but rotated by  90°
---      7 = y-, but rotated by -90°
---    * By default, on placement the param2 is automatically set to the
---      appropriate rotation (0 to 5), depending on which side was
---      pointed at. With the node field `wallmounted_rotate_vertical = true`,
---      the param2 values 6 and 7 might additionally be set
---|"wallmounted"
---* `paramtype2 = "facedir"`
---    * Supported drawtypes: "normal", "nodebox", "mesh"
---    * The rotation of the node is stored in `param2`.
---    * Node is rotated around face and axis; 24 rotations in total.
---    * Can be made by using `core.dir_to_facedir()`.
---    * Chests and furnaces can be rotated that way, and also 'flipped'
---    * Values range 0 - 23
---    * facedir / 4 = axis direction:
---      0 = y+,   1 = z+,   2 = z-,   3 = x+,   4 = x-,   5 = y-
---    * The node is rotated 90 degrees around the X or Z axis so that its top face
---      points in the desired direction. For the y- direction, it's rotated 180
---      degrees around the Z axis.
---    * facedir modulo 4 = left-handed rotation around the specified axis, in 90° steps.
---    * By default, on placement the param2 is automatically set to the
---      horizontal direction the player was looking at (values 0-3)
---    * Special case: If the node is a connected nodebox, the nodebox
---      will NOT rotate, only the textures will.
---|"facedir"
---* `paramtype2 = "4dir"`
---    * Supported drawtypes: "normal", "nodebox", "mesh"
---    * The rotation of the node is stored in `param2`.
---    * Allows node to be rotated horizontally, 4 rotations in total
---    * Can be made by using `core.dir_to_fourdir()`.
---    * Chests and furnaces can be rotated that way, but not flipped
---    * Values range 0 - 3
---    * 4dir modulo 4 = rotation
---    * Otherwise, behavior is identical to facedir
---|"4dir"
---* `paramtype2 = "leveled"`
---    * Only valid for "nodebox" with 'type = "leveled"', and "plantlike_rooted".
---        * Leveled nodebox:
---            * The level of the top face of the nodebox is stored in `param2`.
---            * The other faces are defined by 'fixed = {}' like 'type = "fixed"'
---              nodeboxes.
---            * The nodebox height is (`param2` / 64) nodes.
---            * The maximum accepted value of `param2` is 127.
---        * Rooted plantlike:
---            * The height of the 'plantlike' section is stored in `param2`.
---            * The height is (`param2` / 16) nodes.
---|"leveled"
---* `paramtype2 = "degrotate"`
---    * Valid for `plantlike` and `mesh` drawtypes. The rotation of the node is
---      stored in `param2`.
---    * Values range 0–239. The value stored in `param2` is multiplied by 1.5 to
---      get the actual rotation in degrees of the node.
---|"degrotate"
---* `paramtype2 = "meshoptions"`
---    * Only valid for "plantlike" drawtype. `param2` encodes the shape and
---      optional modifiers of the "plant". `param2` is a bitfield.
---    * Bits 0 to 2 select the shape.
---      Use only one of the values below:
---        * 0 = an "x" shaped plant (ordinary plant)
---        * 1 = a "+" shaped plant (just rotated 45 degrees)
---        * 2 = a "*" shaped plant with 3 faces instead of 2
---        * 3 = a "#" shaped plant with 4 faces instead of 2
---        * 4 = a "#" shaped plant with 4 faces that lean outwards
---        * 5-7 are unused and reserved for future meshes.
---    * Bits 3 to 7 are used to enable any number of optional modifiers.
---      Just add the corresponding value(s) below to `param2`:
---        * 8  - Makes the plant slightly vary placement horizontally
---        * 16 - Makes the plant mesh 1.4x larger
---        * 32 - Moves each face randomly a small bit down (1/8 max)
---        * values 64 and 128 (bits 6-7) are reserved for future use.
---    * Example: `param2 = 0` selects a normal "x" shaped plant
---    * Example: `param2 = 17` selects a "+" shaped plant, 1.4x larger (1+16)
---|"meshoptions"
---* `paramtype2 = "color"`
---    * `param2` tells which color is picked from the palette.
---      The palette should have 256 pixels.
---|"color"
---* `paramtype2 = "colorfacedir"`
---    * Same as `facedir`, but with colors.
---    * The three most significant bits of `param2` tells which color is picked from the
---      palette. The palette should have 8 pixels.
---    * The five least significant bits contain the `facedir` value.
---|"colorfacedir"
---* `paramtype2 = "color4dir"`
---    * Same as `4dir`, but with colors.
---    * The six most significant bits of `param2` tells which color is picked from the
---      palette. The palette should have 64 pixels.
---    * The two least significant bits contain the `4dir` rotation.
---|"color4dir"
---* `paramtype2 = "colorwallmounted"`
---    * Same as `wallmounted`, but with colors.
---    * The five most significant bits of `param2` tells which color is picked from the
---      palette. The palette should have 32 pixels.
---    * The three least significant bits contain the `wallmounted` value.
---|"colorwallmounted"
---* `paramtype2 = "glasslikeliquidlevel"`
---    * Only valid for "glasslike_framed" or "glasslike_framed_optional"
---      drawtypes. "glasslike_framed_optional" nodes are only affected if the
---      "Connected Glass" setting is enabled.
---    * Bits 0-5 define 64 levels of internal liquid, 0 being empty and 63 being
---      full.
---    * Bits 6 and 7 modify the appearance of the frame and node faces. One or
---      both of these values may be added to `param2`:
---        * 64  - Makes the node not connect with neighbors above or below it.
---        * 128 - Makes the node not connect with neighbors to its sides.
---    * Liquid texture is defined using `special_tiles = {"modname_tilename.png"}`
---|"glasslikeliquidlevel"
---* `paramtype2 = "colordegrotate"`
---    * Same as `degrotate`, but with colors.
---    * The three most significant bits of `param2` tells which color is picked
---      from the palette. The palette should have 8 pixels.
---    * The five least significant bits store rotation in range 0–23 (i.e. in 15° steps)
---|"colordegrotate"
---* `paramtype2 = "none"`
---    * `param2` will not be used by the engine and can be used to store
---      an arbitrary value
---|"none"

---
---Nodes can also contain extra data. See [Node Metadata].
